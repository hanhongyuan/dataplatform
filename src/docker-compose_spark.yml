version: "3"
services:
 master:
  image: gettyimages/spark
  command: bin/spark-class org.apache.spark.deploy.master.Master -h master
  hostname: master
  environment:
    MASTER: spark://master:7077
    SPARK_CONF_DIR: /conf
    SPARK_PUBLIC_DNS: localhost
  ports:
    - 4040:4040
    - 6066:6066
    - 7077:7077
    - 8080:8080
  volumes:
    - ./conf/master:/conf
    - ./data:/tmp/data
  networks:
    - webnet
    
 web:
  # replace username/repo:tag with your name and image details
  image: harryyhzhang/quickstart-python
  deploy:
   replicas: 5
   resources:
    limits:
     cpus: "0.1"
     memory: 50M
   restart_policy:
    condition: on-failure
  ports:
   - "8888:80"
  networks:
   - webnet
   
 worker:
  image: gettyimages/spark
  command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://master:7077
  hostname: worker
  deploy:
   replicas: 3
  environment:
    SPARK_CONF_DIR: /conf
    SPARK_WORKER_CORES: 2
    SPARK_WORKER_MEMORY: 1g
    SPARK_WORKER_PORT: 8881
    SPARK_WORKER_WEBUI_PORT: 8081
    SPARK_PUBLIC_DNS: localhost
  links:
    - master
  ports:
    - 8081:8081
  volumes:
    - ./conf/worker:/conf
    - ./data2:/tmp/data
  networks:
    - webnet
    
 visualizer:
  image: dockersamples/visualizer:stable
  ports:
   - "9090:8080"
  volumes:
   - "/var/run/docker.sock:/var/run/docker.sock"
  deploy:
   placement:
    constraints: [node.role == manager]
  networks:
   - webnet
networks:
 webnet:    